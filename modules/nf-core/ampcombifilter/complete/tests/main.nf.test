nextflow_process {

    name "Test Process AMPCOMBIFILTER_COMPLETE"
    script "../main.nf"
    process "AMPCOMBIFILTER_COMPLETE"

    tag "modules"
    tag "modules_nfcore"
    tag "ampcombifilter"
    tag "ampcombifilter/complete"

    test("ampcombifilter_complete - bacteroides_fragilis") {
        when {
            process {
                """
                input[0] =
                    [
                        file('https://github.com/nf-core/test-datasets/raw/modules/data/delete_me/ampcombi/ampcombifilter/sample_1_ampcombi.tsv', checkIfExists: true),
                        file('https://github.com/nf-core/test-datasets/raw/modules/data/delete_me/ampcombi/ampcombifilter/sample_2_ampcombi.tsv', checkIfExists: true)
                    ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.tsv[0]).readLines()[0].contains("ampir"),
                    process.out.versions).match() }
            )
        }
    }

    test("ampcombifilter_complete - bacteroides_fragilis - stub") {
        options "-stub"
        when {
            process {
                """
                input[0] =
                    [
                        file('https://github.com/nf-core/test-datasets/raw/modules/data/delete_me/ampcombi/ampcombifilter/sample_1_ampcombi.tsv', checkIfExists: true),
                        file('https://github.com/nf-core/test-datasets/raw/modules/data/delete_me/ampcombi/ampcombifilter/sample_2_ampcombi.tsv', checkIfExists: true)
                    ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
